@use 'mixin'as m;

.indexcontainer {
    max-height: 2000px;
    width: 100vw;
    padding-top:50px ;
    padding-bottom: 50px;
    display: flex;
    justify-content: center; 
    align-items: center; 
    position: relative;
    .origin {
        writing-mode: vertical-rl;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column-reverse;
        @include m.sp {
            writing-mode: horizontal-tb;
            flex-direction: column-reverse;
            text-align: center;
        }
        .indextext {
            height: 100%;
            width: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 100;
            // white-space: nowrap;
            // overflow: hidden;
            animation: indextext 6.5s linear forwards, blurEffect 6.5s linear forwards;
            writing-mode: vertical-rl;
            line-height: 2.5;
            font-size: calc(0.5em + 2vw);
            @include m.sp{
                writing-mode: horizontal-tb; 
            }
        }
        .indextitle{
            @include m.indextitle;
        }
        // .indextitle::after{
        //     @include m.indextitleafter;
        // }
        // .indextitle::before{
        //     @include m.indextitlebefor;
        // }
    }
    &::before {
        content: "";
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        left: 0;
        width: 100%;
        height: 100%;
        background-image: url(assets/images/sunset.png);
        background-size: cover;
        background-repeat: no-repeat;
        background-position: center;
        filter: blur(2px) brightness(0.8); // フィルターをここに適用
        z-index: -1; // 親要素の後ろに配置
        @include m.sp {
            border-radius: 50%; // タブレット時に円形化
            height: 100vw;     // 幅を65%に調整
            aspect-ratio: 1/1; 
        }
      }
}

@keyframes indextext {

    from {

        height: 100%;
    }

    to {
        height: 110%;
    }

}

@keyframes blurEffect {
    from {
        opacity: 0;
        filter: blur(5px);
    }

    to {
        opacity: 1;
        filter: blur(0);
    }
}